{

	// TODO research all fundamental properties in needed for parsing a CSV file
	"@id" : "http://dadfha.com/csv/ex1.csvx", // ID of this csv-x schema file which can be IRI. (Required)
	"@targetCSVs" : [ "http://dadfha.com/csv/ex1.csv", "http://dadfha.com/csv/ex2.csv" ], // ID of CSV file(s) this schema is describing. (Optional)
	"@encoding" : "UTF-8", // CSV character encoding, default to UTF-8 if not specified. (Optional)
	"@lang" : "ja",	// The main language of string literals inside the file. Default to "en" if not specified. (Optional)
	
	// CSV dialects. TODO derive from parser customizable parameters & CSVW
	"@delimiter" : ",", // Delimited character. Default to "," if not specified. (Optional)
	"@lineSeparator" : "\n\r", // End of line character. If not specified, the system default new line character should be used. (Optional)
	"@commentPrefix" : "#", // Specify comment symbol for a CSV. (Optional)
	"@quoteChar" : "\"",
	"@header" : false,
	//"@headerRowCount" : 1,
	"@doubleQuote" : true,
	"@skipBlankRows" : true,
	"@skipColumns" : 1,
	"@skipInitialSpace" : true,
	"@skipRows" : 2,
	"@trim" : true,

	// CSV-X metadata (Con't)
	"@embedHeader" : false, // TODO check if Embedded Metadata is always required by CSVW spec, if so elaborate as weak point in our paper
	
	"@property" : // a user-defined data property 
	{ 
		"@name" : "hasMsrDay",  // Property name is always required for property as a name to refer to
		"@id" : "ex:hasMsrDay",
		"@datatype" : "dayOfMonth", // TODO re-check if this rich-datatype is supported in latest version of XML schema datatype.
		"title_en" : "has measurement day",
		"description" : "a property describing the day observation was made." 
	},
	
	"@property" : 
	{
		"@name" : "title_en",
		"@id" : "ex:title",
		"@datatype" : "string",
		"@lang" : "en", // all literal values being described by this property is in the specified language
		"title" : "has title", // isn't it interesting? the property is used to describe itself
		"description" : "a property naming title for anything in English."
	},	

	// Table represents a pattern of schema for a specific set of cells. It defines each cell definition and cells' common properties.
	"@table" :  
	{
		"@mapType" : "Dataset",
		"@name" : "myTable", // (Optional) even without this attribute, unnamed table(s) will be assigned uniquely addressable name 
		"title" : "{tableTitle}", 
		"title_en" : "Tokyo Air Pollutions Report",

		// (Optional) If defined, the value of all Empty Cells will be replaced with the value, making all Empty Cells not empty. 
		// This is mutually exclusive to '@replaceValueMap' operation.
		//"@emptyCellFill" : "", 
		
		"@replaceValueMap" : // (Optional) Replace value based on this map. 
		{
			"*****" : ""
		},
		
		"@commonProps" :
		{
			"hasMsrMonthYear" : "{msrYrMth}",
			"hasMsrLocation" : "{msrLoc}",
			"hasMsrLocationCode" : "{msrLocCode}",
			"hasMsrProperty" : "{msrProp}",
			"hasMsrPropertyCode" : "{msrPropCode}",
			"hasMsrUnit" : "{msrUnit}"		
		},
		
		"@cell[0-2,0]" : 
		{
			// Empty Cell indicates it's a part of the schema but is expected to contain no value at all.
			// (note that an empty string "" within quotes is regarded as having a value).
		},
	
		"@cell[0,1]" : 
		{
			"@name" : "tableTitle",
			"@regex" : "大気環境月報"
		},
	
		"@cell[0,2]" : 
		{
			"@name" : "msrYrMth", // (variable) name of the entity (cell), should conform to QNAME  
			"@regex" : "(平成)(\\d+)(年)(\\d+)(月)"  // Japanese year month format. Ex.平成27年1月
		},
	
		"@cell[1,1]" : 
		{
			"@regex" : "測定場所"	
		},
	
		"@cell[1,2]" : 
		{
			"@name" : "msrLocCode",
			"@regex" : "(\\()(\\d+)(\\))"
		},
	
		"@cell[1,3]" : 
		{
			"@name" : "msrLoc",
			"@regex" : "(.*)"
		},	
	
		"@cell[1,4]" : 
		{
			"@regex" : "項目"	
		},	
	
		"@cell[1,5]" : 
		{
			"@name" : "msrPropCode",
			"@regex" : "(\\()(\\d+)(\\))"
		},
	
		"@cell[1,6]" : 
		{
			"@name" : "msrProp",
			"@regex" : "(.*)"
		},	
	
		"@cell[1,7]" : 
		{
			"@regex" : "単位"
		},
	
		"@cell[1,8]" : 
		{
			"@name" : "msrUnit",
			"@lang" : "en", // Override default @lang
			"@regex" : "(.*)"
		},
	
		"@cell[2,1]" : 
		{
			"@name" : "msrHr1",
			"@regex" : "1時"
		},	
		
		"@cell[2,2]" : 
		{
			"@name" : "msrHr2",
			"@regex" : "2時"
		},	
	
		"@cell[2,3]" : 
		{
			"@name" : "msrHr3",
			"@regex" : "3時"
		},
	
		"@cell[2,4]" : 
		{
			"@name" : "msrHr4",
			"@regex" : "4時"
		},	
	
		"@cell[2,5]" : 
		{
			"@name" : "msrHr5",
			"@regex" : "5時"
		},	
	
		"@cell[2,6]" : 
		{
			"@name" : "msrHr6",
			"@regex" : "6時"
		},	
		
		"@cell[2,7]" : 
		{
			"@name" : "msrHr7",
			"@regex" : "7時"
		},	
	
		"@cell[2,8]" : 
		{
			"@name" : "msrHr8",
			"@regex" : "8時"
		},
	
		"@cell[2,9]" : 
		{
			"@name" : "msrHr9",
			"@regex" : "9時"
		},
	
		"@cell[2,10]" : 
		{
			"@name" : "msrHr10",
			"@regex" : "10時"
		},	
	
		"@cell[2,11]" : 
		{
			"@name" : "msrHr11",
			"@regex" : "11時"
		},	
		
		"@cell[2,12]" : 
		{
			"@name" : "msrHr12",
			"@regex" : "12時"
		},	
	
		"@cell[2,13]" : 
		{
			"@name" : "msrHr13",
			"@regex" : "13時"
		},
	
		"@cell[2,14]" : 
		{
			"@name" : "msrHr14",
			"@regex" : "14時"
		},	
	
		"@cell[2,15]" : 
		{
			"@name" : "msrHr15",
			"@regex" : "15時"
		},	
	
		"@cell[2,16]" : 
		{
			"@name" : "msrHr16",
			"@regex" : "16時"
		},	
		
		"@cell[2,17]" : 
		{
			"@name" : "msrHr17",
			"@regex" : "17時"
		},	
	
		"@cell[2,18]" : 
		{
			"@name" : "msrHr18",
			"@regex" : "18時"
		},
	
		"@cell[2,19]" : 
		{
			"@name" : "msrHr19",
			"@regex" : "19時"
		},	
	
		"@cell[2,20]" : 
		{
			"@name" : "msrHr20",
			"@regex" : "20時"
		},	
	
		"@cell[2,21]" : 
		{
			"@name" : "msrHr21",
			"@regex" : "21時"
		},	
		
		"@cell[2,22]" : 
		{
			"@name" : "msrHr22",
			"@regex" : "22時"
		},	
	
		"@cell[2,23]" : 
		{
			"@name" : "msrHr23",
			"@regex" : "23時"
		},
	
		"@cell[2,24]" : 
		{
			"@name" : "msrHr24",
			"@regex" : "24時"
		},
	
		"@cell[2,25]" : 
		{
			"@regex" : "平均"
		},	
	
		"@cell[2,26]" : 
		{
			"@regex" : "最高"
		},		
	
		"@cell[2,27]" : 
		{
			"@regex" : "最低"
		},	
	
		"@cell[2,28]" : 
		{
			"@regex" : "回数"
		},	
	
		"@cell[2,29]" : 
		{
			"@regex" : "合計"
		},	
	
		"@row[3]" : 
		{
			"@repeatTimes" : -1
		},
		
		"@cell[3,0]" : 
		{
			"@name" : "msrDay{subrow}",
			"@regex" : "(\\d+)(日)"
		},
	
		"@cell[3,1-24]" :
		{
			"@name" : "msrData{subrow}{col}",
			"@mapType" : "Datapoint", // by declaring a type for a cell, we're implicitly saying that this cell's properties will be mapped to target data model
			"title_en" : "{msrProp} property measurement value at date/time: {msrYrMth}{msrDay{subrow}}/{msrHr{col}} at location: {msrLoc}",
			"@datatype" : "integer",
			"hasMsrDay" : "{msrDay{subrow}}",
			"hasMsrHour" : "{msrHr{col}}", // former "@cell[2,{col}]",
			"hasMsrVal" : "{@value}" // this is the way to associate this cell's value with a property of datapoint.
		},
	
		"@cell[3,25]" :
		{
			"@mapType" : "Datapoint",
			"title_en" : "{msrProp} property measurement DAILY AVERAGE value at date: {msrYrMth}{msrDay{subrow}} at location: {msrLoc}",
			"@datatype" : "integer",		
			"@value" : "{@value}", // by default cell's value is associated with '@value' property but this can be overridden
			"hasMsrDay" : "{msrDay{subrow}}"   
		},	
	
		"@cell[3,26]" :
		{		
			"@name" : "dailyMax{subrow}",
			"@datatype" : "integer"		
		},
		
		"@data" : // an alternative way to declare a data instance of a model (Datapoint). 
		{
			"@mapType" : "Datapoint",
			"@id" : "ex:{msrYrMth}/{msrDay{subrow}}/{msrProp}dailyMax/",
			"title_en" : "{msrProp} property measurement DAILY MAXIMUM value at date: {msrYrMth}{msrDay{subrow}} at location: {msrLoc}",
			"hasMsrDay" : "{msrDay{subrow}}",
			"hasMsrVal" : "{dailyMax{subrow}}" // by referring to a cell within a repeating row, this data model will be created for all subrow at runtime
			//"hasMsrVal" : "@cell[3,26]" 
		},
	
		"@cell[3,27]" : 
		{
			"@mapType" : "Datapoint",
			"title" : "{msrProp} property measurement DAILY MINIMUM value at date: {msrYrMth}{msrDay{subrow}} at location: {msrLoc}",
			"@datatype" : "integer",
			"hasMsrDay" : "{msrDay{subrow}}"
		},
	
		"@cell[3,28]" :
		{
			"@mapType" : "Datapoint",
			"title" : "{msrProp} property measurement DAILY MEASUREMENT TIMES value at date: {msrYrMth}{msrDay{subrow}} at location: {msrLoc}",
			"@datatype" : "integer",
			"hasMsrDay" : "{msrDay{subrow}}"
		},
	
		"@cell[3,29]" : 
		{
			"@mapType" : "Datapoint",
			"title" : "{msrProp} property measurement DAILY TOTAL value at date: {msrYrMth}{msrDay{subrow}} at location: {msrLoc}",
			"@datatype" : "integer",
			"hasMsrDay" : "{msrDay{subrow}}"
		},
	
		"@cell[4,1-24]" :
		{
			"@mapType" : "Datapoint",
			"title" : "{msrProp} property measurement MONTHLY AVERAGE PER HOUR value at month-year/time: {msrYrMth}/{msrHr{Col}} at location: {msrLoc}",
			"@datatype" : "integer",
			"hasMsrHour" : "{msrHr{Col}}"
		},
	
		"@cell[5,1-24]" : 
		{
			"@mapType" : "Datapoint",
			"title" : "{msrProp} property measurement MONTHLY MAXIMUM PER HOUR value at month-year/time: {msrYrMth}/{msrHr{Col}} at location: {msrLoc}",
			"@datatype" : "integer",
			"hasMsrHour" : "{msrHr{Col}}"
		},
	
		"@cell[6,1-24]" : 
		{
			"@mapType" : "Datapoint",
			"title" : "{msrProp} property measurement MONTHLY MINIMUM PER HOUR value at month-year/time: {msrYrMth}/{msrHr{Col}} at location: {msrLoc}",
			"@datatype" : "integer",
			"hasMsrHour" : "{msrHr{Col}}"
		},	
	
	
		"@cell[7,1-24]" : 
		{
			"@mapType" : "Datapoint",
			"title" : "{msrProp} property measurement MONTHLY MEASUREMENT TIMES PER HOUR value at month-year/time: {msrYrMth}/{msrHr{Col}} at location: {msrLoc}",
			"@datatype" : "integer",
			"hasMsrHour" : "{msrHr{Col}}"
		},
	
		"@cell[8,1-24]" : 
		{
			"@mapType" : "Datapoint",
			"title" : "{msrProp} property measurement MONTHLY TOTAL PER HOUR value at month-year/time: {msrYrMth}/{msrHr{Col}} at location: {msrLoc}",
			"@datatype" : "integer",
			"hasMsrHour" : "{msrHr{Col}}"
		},		
	
		"@cell[4,25]" : 
		{ 
			"@mapType" : "Datapoint",
			"title" : "{msrProp} property measurement MONTHLY AVERAGE value at month-year: {msrYrMth} at location: {msrLoc}",
			"@datatype" : "integer"
		},
	
		"@cell[5,26]" : 
		{ 
			"@mapType" : "Datapoint",
			"title" : "{msrProp} property measurement MONTHLY MAXIMUM value at month-year: {msrYrMth} at location: {msrLoc}",
			"@datatype" : "integer"
		},
	
		"@cell[6,27]" : 
		{ 
			"@mapType" : "Datapoint",
			"title" : "{msrProp} property measurement MONTHLY MINIMUM value at month-year: {msrYrMth} at location: {msrLoc}",
			"@datatype" : "integer"
		},	
		
		"@cell[7,28]" : 
		{ 
			"@mapType" : "Datapoint",
			"title" : "{msrProp} property measurement MONTHLY MEASUREMENT TIMES value at month-year: {msrYrMth} at location: {msrLoc}",
			"@datatype" : "integer"
		},
	
		"@cell[8,29]" : 
		{ 
			"@mapType" : "Datapoint",
			"title" : "{msrProp} property measurement MONTHLY TOTAL value at month-year: {msrYrMth} at location: {msrLoc}",
			"@datatype" : "integer"
		}

	},
	
	"@table" : 
	{
		"@mapType" : "Dataset",
		"@name" : "WindMsrTbl",
		"title_en" : "Tokyo Monthly Environment Measurement (Wind)",
		"title" : "{tableTitle_wind}",
		
		"@commonProps" : 
		{
			"hasMsrProperty" : "{msrProp_wind}",
			"hasMsrPropertyCode" : "{msrPropCode_wind}",
			"hasMsrLocation" : "{msrLoc_wind}",
			"hasMsrLocationCode" : "{msrLocCode_wind}",
			"hasMsrMonthYear" : "{msrYrMth_wind}"
		},
				
		"@cell[0-2,0]" : {},
		
		"@cell[0,1]" : 
		{
			"@name" : "tableTitle_wind",
			"@regex" : "大気環境月報"
		},
		
		"@cell[0,2]" : 
		{
			"@name" : "msrYrMth_wind",
			"@regex" : "(平成)(\\d+)(年)(\\d+)(月)"
		},
		
		"@cell[1,1]" :
		{
			"@regex" : "測定場所"
		},
		
		"@cell[1,2]" : 
		{
			"@name" : "msrLocCode_wind",
			"@regex" : "(\\()(\\d+)(\\))" 
		},
		
		"@cell[1,3]" :
		{
			"@name" : "msrLoc_wind",
			"@regex" : "(.*)"
		},
		
		"@cell[1,4]" :
		{
			"@regex" : "項目"
		},
		
		"@cell[1,5]" :
		{
			"@name" :  "msrPropCode_wind",
			"@regex" : "(\\()(\\d+)(\\))"
		},
		
		"@cell[1,6]" :
		{
			"@name" :  "msrProp_wind",
			"@regex" : "風向"
		},
		
		"@cell[2,1]" :
		{
			"@name" : "msrHr{col}_wind", // {row},{col},{subrow} are special context vars. var has to be resolved at csv parsing time to declare var.
			"@regex" : "1時"
		},
		
		"@cell[2,2]" :
		{
			"@name" : "msrHr{col}_wind",
			"@regex" : "2時"
		},
		
		"@cell[2,3]" :
		{
			"@name" : "msrHr{col}_wind",
			"@regex" : "3時"
		},		
		
		"@cell[2,4]" :
		{
			"@name" : "msrHr{col}_wind",
			"@regex" : "4時"
		},		
		
		"@cell[2,5]" :
		{
			"@name" : "msrHr{col}_wind",
			"@regex" : "5時"
		},		
		
		"@cell[2,6]" :
		{
			"@name" : "msrHr{col}_wind",
			"@regex" : "6時"
		},		
		
		"@cell[2,7]" :
		{
			"@name" : "msrHr{col}_wind",
			"@regex" : "7時"
		},		
		
		"@cell[2,8]" :
		{
			"@name" : "msrHr{col}_wind",
			"@regex" : "8時"
		},		
		
		"@cell[2,9]" :
		{
			"@name" : "msrHr{col}_wind",
			"@regex" : "9時"
		},		
		
		"@cell[2,10]" :
		{
			"@name" : "msrHr{col}_wind",
			"@regex" : "10時"
		},		
		
		"@cell[2,11]" :
		{
			"@name" : "msrHr{col}_wind",
			"@regex" : "11時"
		},		
		
		"@cell[2,12]" :
		{
			"@name" : "msrHr{col}_wind",
			"@regex" : "12時"
		},		
		
		"@cell[2,13]" :
		{
			"@name" : "msrHr{col}_wind",
			"@regex" : "13時"
		},		
		
		"@cell[2,14]" :
		{
			"@name" : "msrHr{col}_wind",
			"@regex" : "14時"
		},		
		
		"@cell[2,15]" :
		{
			"@name" : "msrHr{col}_wind",
			"@regex" : "15時"
		},		
		
		"@cell[2,16]" :
		{
			"@name" : "msrHr{col}_wind",
			"@regex" : "16時"
		},		
		
		"@cell[2,17]" :
		{
			"@name" : "msrHr{col}_wind",
			"@regex" : "17時"
		},		
		
		"@cell[2,18]" :
		{
			"@name" : "msrHr{col}_wind",
			"@regex" : "18時"
		},		
		
		"@cell[2,19]" :
		{
			"@name" : "msrHr{col}_wind",
			"@regex" : "19時"
		},		
		
		"@cell[2,20]" :
		{
			"@name" : "msrHr{col}_wind",
			"@regex" : "20時"
		},		
		
		"@cell[2,21]" :
		{
			"@name" : "msrHr{col}_wind",
			"@regex" : "21時"
		},		
		
		"@cell[2,22]" :
		{
			"@name" : "msrHr{col}_wind",
			"@regex" : "22時"
		},		
		
		"@cell[2,23]" :
		{
			"@name" : "msrHr{col}_wind",
			"@regex" : "23時"
		},		
		
		"@cell[2,24]" :
		{
			"@name" : "msrHr{col}_wind",
			"@regex" : "24時"
		},	
		
		"@cell[2,25]" :
		{
			"@regex" : "平均"
		},			
		
		"@cell[2,26]" :
		{
			"@regex" : "最高"
		},
		
		"@cell[2,27]" :
		{
			"@regex" : "最低"
		},		
		
		"@cell[2,28]" :
		{
			"@regex" : "回数"
		},
		
		"@cell[2,29]" :
		{
			"@regex" : "合計"
		},		
		
		"@row[3]" :
		{
			"@repeatTimes" : -1
		},
		
		// Variable name of cells in repeating row must have 'subrow' variable in the name.
		// The same principle is also applied to spanned row/column by using 'row' and 'col' 
		// to address a specific row/column being processed. 
		"@cell[3,0]" :
		{
			"@name" : "msrDay{subrow}_wind",  
			"@regex" : "(\\d+)(日)"
		},
		
		"@cell[3,1-24]" :
		{
			"@mapType" : "Datapoint",
			"@regex" : "NNW|NNE|NW|NE|N|ENE|ESE|E|SSE|SSW|SE|SW|S|WNW|WSW|W|C",
			"title_en" : "Measurement of {msrProp_wind} at {msrLoc_wind} on {msrDay{subrow}_wind}{msrYrMth_wind} {msrHr{col}_wind}",
			"hasMsrHour" : "{msrHr{col}_wind}",
			"hasMsrDay" : "{msrDay{subrow}_wind}",
			"hasMsrVal" : "{@value}"
		},
		
		"@cell[3,25-27]" : {},
		
		"@cell[3,28]" : 
		{
			"@mapType" : "Datapoint",
			"@datatype" : "integer",			
			"title_en" : "Measurement times in the day.",
			"hasMsrDay" : "{msrDay{subrow}_wind}"	
		},
		
		"@cell[3,29]" : {},
		
		"@cell[4,0]" : 
		{
			"@regex" : "風向"
		},
		
		"@cell[4,1]" :
		{
			"@name" : "windDir{col}",
			"@regex" : "NNE"
		},
		
		"@cell[4,2]" :
		{
			"@name" : "windDir{col}",
			"@regex" : "NE"
		},
		
		"@cell[4,3]" :
		{
			"@name" : "windDir{col}",
			"@regex" : "ENE"
		},		
		
		"@cell[4,4]" :
		{
			"@name" : "windDir{col}",
			"@regex" : "E"
		},		
		
		"@cell[4,5]" :
		{
			"@name" : "windDir{col}",
			"@regex" : "ESE"
		},
		
		"@cell[4,6]" :
		{
			"@name" : "windDir{col}",
			"@regex" : "SE"
		},	
		
		"@cell[4,7]" :
		{
			"@name" : "windDir{col}",
			"@regex" : "SSE"
		},						
		
		"@cell[4,8]" :
		{
			"@name" : "windDir{col}",
			"@regex" : "S"
		},
		
		"@cell[4,9]" :
		{
			"@name" : "windDir{col}",
			"@regex" : "SSW"
		},
		
		"@cell[4,10]" :
		{
			"@name" : "windDir{col}",
			"@regex" : "SW"
		},
		
		"@cell[4,11]" :
		{
			"@name" : "windDir{col}",
			"@regex" : "WSW"
		},
		
		"@cell[4,12]" :
		{
			"@name" : "windDir{col}",
			"@regex" : "W"
		},
		
		"@cell[4,13]" :
		{
			"@name" : "windDir{col}",
			"@regex" : "WNW"
		},
		
		"@cell[4,14]" :
		{
			"@name" : "windDir{col}",
			"@regex" : "NW"
		},
		
		"@cell[4,15]" :
		{
			"@name" : "windDir{col}",
			"@regex" : "NNW"
		},
		
		"@cell[4,16]" :
		{
			"@name" : "windDir{col}",
			"@regex" : "N"
		},
		
		"@cell[4,17]" :
		{
			"@name" : "windDir{col}",
			"@regex" : "C"
		},
		
		"@cell[4,18-25]" : {},							
		
		"@cell[5,0]" : 
		{
			"@regex" : "頻度",
			"title_en" : "Frequency"
		},
		
		"@cell[5,1-17]" : 
		{
			"@mapType" : "Datapoint",
			"@datatype" : "integer",
			"title_en" : "Frequency of wind direction {windDir{col}} in the {msrYrMth_wind}.",
			"ofWindDirection" : "{windDir{col}}" 
			//"ofWindDirection" : "@cell[4,{col}]" 
		},
		
		"@cell[5,18-25]" : {},	
		
		"@cell[6,0]" :
		{
			"@regex" : "割合",
			"title_en" : "Percentage"
		},
		
		"@cell[6,1-17]" :
		{
			"@mapType" : "Datapoint",
			"@datatype" : "double", // TODO how to express one decimal digit?
			"title_en" : "Percentage of wind direction {windDir{col}} in the {msrYrMth_wind}.",
			"ofWindDirection" : "{windDir{col}}" 
		},
		
		"@cell[6,18-25]" : {},	
		
		"@cell[7,0]" : 
		{
			"@regex" : "日数"
		},	
		
		"@cell[7,1-24]" :
		{
			"@mapType" : "Datapoint",
			"@datatype" : "integer", // TODO how to set Min/Max val
			"title_en" : "Measurement days at {msrHr{col}_wind} in {msrYrMth_wind}",
			"ofMsrHour" :  "{msrHr{col}_wind}"
		},
		
		"@cell[7,25-27]" : {},
		
		"@cell[7,28]" : 
		{
			"@mapType" : "Datapoint",
			"@datatype" : "integer",
			"title_en" : "Total number of measurement days in {msrYrMth_wind}",			
		},
		
		"@cell[7,29]" : {},
		
		"@cell[8,0]" :
		{
			"@regex" : "合計"
		},
		
		"@cell[8,1-29]" : {}
		
	} // end of wind direction table

} // end of schema

